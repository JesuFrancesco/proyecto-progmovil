// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// location
model Distrito {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  provinciaId Int
  Provincia   Provincia @relation(fields: [provinciaId], references: [id])
  Buyer       Buyer[]

  @@map("distritos")
}

model Provincia {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  departmentoId Int
  Departmento   Departmento @relation(fields: [departmentoId], references: [id])
  Distrito      Distrito[]
  Buyer         Buyer[]

  @@map("provincias")
}

model Departmento {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  Provincia Provincia[]
  Buyer     Buyer[]

  @@map("departamentos")
}

// chat messages
model Chat {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime
  ChatMessage     ChatMessage[]
  ChatParticipant ChatParticipant[]

  @@map("chats")
}

model Message {
  id                Int                 @id @default(autoincrement())
  text              String
  createdAt         DateTime
  updatedAt         DateTime
  status            Int
  accountId         Int
  Account           Account             @relation(fields: [accountId], references: [id])
  MessageAttachment MessageAttachment[]
  ChatMessage       ChatMessage[]

  @@map("messages")
}

model Notification {
  id               Int                @id @default(autoincrement())
  title            String
  description      String
  createdAt        DateTime
  updatedAt        DateTime
  imageUrl         String
  UserNotification UserNotification[]

  @@map("notificactions")
}

model Country {
  id          Int           @id @default(autoincrement())
  name        String
  code        String
  BrandSeller BrandSeller[]

  @@map("countries")
}

model Account {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  role     String    @default("user")
  password String
  phone    String?
  name     String
  Market   Market[]
  Buyer    Buyer[]
  Message  Message[]

  @@map("accounts")
}

model Market {
  id            Int             @id @default(autoincrement())
  name          String
  contactEmail  String
  contactPhone  String
  accountId     Int
  Account       Account         @relation(fields: [accountId], references: [id])
  MarketProduct MarketProduct[]

  @@map("markets")
}

model Buyer {
  id               Int                @id @default(autoincrement())
  referenceAddress String?
  distritoId       Int
  provinciaId      Int
  departamentoId   Int
  accountId        Int                @unique
  Distrito         Distrito           @relation(fields: [distritoId], references: [id])
  Provincia        Provincia          @relation(fields: [provinciaId], references: [id])
  Departmento      Departmento        @relation(fields: [departamentoId], references: [id])
  Account          Account            @relation(fields: [accountId], references: [id])
  ShoppingCart     ShoppingCart[]
  Wishlist         Wishlist[]
  Order            Order[]
  ProductRating    ProductRating[]
  ProductQuestion  ProductQuestion[]
  UserNotification UserNotification[]
  ChatParticipant  ChatParticipant[]

  @@map("buyers")
}

model ShoppingCart {
  id       Int        @id @default(autoincrement())
  userId   Int
  Buyer    Buyer      @relation(fields: [userId], references: [id])
  CartItem CartItem[]

  @@map("shopping_carts")
}

model Wishlist {
  id           Int            @id @default(autoincrement())
  userId       Int
  Buyer        Buyer          @relation(fields: [userId], references: [id])
  WishlistItem WishlistItem[]

  @@map("wishlists")
}

model Order {
  id         Int         @id @default(autoincrement())
  totalPrice Int
  status     String
  userId     Int
  Buyer      Buyer       @relation(fields: [userId], references: [id])
  OrderItem  OrderItem[]

  @@map("orders")
}

model ChatMessage {
  chatId    Int
  messageId Int
  Chat      Chat    @relation(fields: [chatId], references: [id])
  Message   Message @relation(fields: [messageId], references: [id])

  @@id([chatId, messageId])
  @@map("chat_messages")
}

model BrandSeller {
  id                Int       @id @default(autoincrement())
  name              String
  countryOrigin     String
  referenceLocation String
  countryId         Int
  Country           Country   @relation(fields: [countryId], references: [id])
  Product           Product[]

  @@map("brand_sellers")
}

model MessageAttachment {
  id        Int     @id @default(autoincrement())
  blobUrl   String
  filename  String
  type      String
  messageId Int
  Message   Message @relation(fields: [messageId], references: [id])

  @@map("message_attachments")
}

model UserNotification {
  userId         Int
  notificationId Int
  Buyer          Buyer        @relation(fields: [userId], references: [id])
  Notification   Notification @relation(fields: [notificationId], references: [id])

  @@id([userId, notificationId])
  @@map("user_notifications")
}

model ChatParticipant {
  chatId Int
  userId Int
  Chat   Chat  @relation(fields: [chatId], references: [id])
  Buyer  Buyer @relation(fields: [userId], references: [id])

  @@id([chatId, userId])
  @@map("chat_participants")
}

model Product {
  id                Int                 @id @default(autoincrement())
  name              String
  stock             Int
  price             Decimal
  dimensions        String?
  warranty          Boolean?
  discount          Int?
  peso              Decimal?
  formato           String?
  anhoEdicion       Int?
  numeroPaginas     Int?
  sellerId          Int
  BrandSeller       BrandSeller         @relation(fields: [sellerId], references: [id])
  ProductAttachment ProductAttachment[]
  ProductTag        ProductTag[]
  ProductQuestion   ProductQuestion[]
  CartItem          CartItem[]
  WishlistItem      WishlistItem[]
  OrderItem         OrderItem[]
  MarketProduct     MarketProduct[]
  ProductRating     ProductRating[]

  @@map("products")
}

model Tag {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  ProductTag ProductTag[]

  @@map("tags")
}

model ProductQuestion {
  id            Int             @id @default(autoincrement())
  text          String
  createdAt     DateTime
  productId     Int
  userId        Int
  Product       Product         @relation(fields: [productId], references: [id])
  Buyer         Buyer           @relation(fields: [userId], references: [id])
  QuestionReply QuestionReply[]

  @@map("product_questions")
}

model CartItem {
  amount       Int
  addedAt      DateTime
  cartId       Int
  productId    Int
  ShoppingCart ShoppingCart @relation(fields: [cartId], references: [id])
  Product      Product      @relation(fields: [productId], references: [id])

  @@id([cartId, productId])
  @@map("cart_items")
}

model ProductTag {
  categoryId Int
  productId  Int
  Tag        Tag     @relation(fields: [categoryId], references: [id])
  Product    Product @relation(fields: [productId], references: [id])

  @@id([categoryId, productId])
  @@map("product_tags")
}

model WishlistItem {
  addedAt    DateTime
  wishlistId Int
  productId  Int
  Wishlist   Wishlist @relation(fields: [wishlistId], references: [id])
  Product    Product  @relation(fields: [productId], references: [id])

  @@id([wishlistId, productId])
  @@map("wishlist_items")
}

model OrderItem {
  amount    Int
  orderId   Int
  productId Int
  Order     Order   @relation(fields: [orderId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
  @@map("order_items")
}

model ProductAttachment {
  imageUrl  String
  productId Int
  Product   Product @relation(fields: [productId], references: [id])

  @@id([productId])
  @@map("product_attachments")
}

model MarketProduct {
  marketId  Int
  productId Int
  Market    Market  @relation(fields: [marketId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])

  @@id([marketId, productId])
  @@map("market_products")
}

model QuestionReply {
  id              Int             @id @default(autoincrement())
  text            String
  createdAt       DateTime
  questionId      Int
  ProductQuestion ProductQuestion @relation(fields: [questionId], references: [id])

  @@map("question_replies")
}

model ProductRating {
  id               Int                @id @default(autoincrement())
  score            Int
  text             String
  createdAt        DateTime
  userId           Int
  productId        Int
  Buyer            Buyer              @relation(fields: [userId], references: [id])
  Product          Product            @relation(fields: [productId], references: [id])
  RatingAttachment RatingAttachment[]

  @@map("product_ratings")
}

model RatingAttachment {
  blobUrl       String
  filename      String
  type          String
  ratingId      Int
  ProductRating ProductRating @relation(fields: [ratingId], references: [id])

  @@id([ratingId])
  @@map("rating_attachments")
}
