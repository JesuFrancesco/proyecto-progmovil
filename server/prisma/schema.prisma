datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "debian-openssl-3.0.x"]
  previewFeatures = ["multiSchema"]
}

generator express {
  provider = "node ./prisma/generator/dist/generator.js"
  output   = "../src/generated/express"
}

generator dart {
  provider = "node ./node_modules/@abcx3/prisma-generator-dart/index.js"
  output   = "../../jiron_anime/lib/models"
}

// models

model User {
  id    String @id @db.Uuid
  email String @unique

  role String

  rawAppMetadata  Json     @map("raw_app_meta_data")
  rawUserMetadata Json     @map("raw_user_meta_data")
  phone           String
  createdAt       DateTime @map("created_at")
  updatedAt       DateTime @map("updated_at")

  client   Client?
  markets  Market[]
  messages Message[]

  @@map("users")
  @@schema("auth")
}

model Client {
  id               Int           @id @default(autoincrement())
  referenceAddress String?
  distritoId       Int?          @map("distrito_id")
  provinciaId      Int?          @map("provincia_id")
  departamentoId   Int?          @map("departamento_id")
  distrito         Distrito?     @relation(fields: [distritoId], references: [id])
  provincia        Provincia?    @relation(fields: [provinciaId], references: [id])
  departmento      Departamento? @relation(fields: [departamentoId], references: [id])
  user             User          @relation(fields: [userId], references: [id])

  shoppingCarts       ShoppingCart[]
  wishlists           Wishlist[]
  orders              Order[]
  productRatings      ProductRating[]
  productQuestions    ProductQuestion[]
  clientNotifications ClientNotification[]
  chatParticipants    ChatParticipant[]

  userId String @unique @map("user_id")

  @@map("clients")
  @@schema("public")
}

model Notification {
  id                  Int                  @id @default(autoincrement())
  title               String
  description         String
  createdAt           DateTime             @default(now()) @map("created_at")
  updatedAt           DateTime             @default(now()) @map("updated_at")
  imageUrl            String
  clientNotifications ClientNotification[]

  @@map("notificactions")
  @@schema("public")
}

model Market {
  id           Int       @id @default(autoincrement())
  name         String
  contactEmail String    @map("contact_email")
  contactPhone String    @map("contact_phone")
  userId       String    @map("user_id")
  user         User      @relation(fields: [userId], references: [id])
  products     Product[]

  @@map("markets")
  @@schema("public")
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  descripcion   String?
  stock         Int
  price         Decimal
  dimensions    String?
  warranty      Boolean?
  discount      Int?
  peso          Decimal?
  formato       String?
  cubierta      String?
  anhoEdicion   Int?     @map("anho_edicion")
  numeroPaginas Int?     @map("numero_paginas")

  marketId Int    @map("market_id")
  market   Market @relation(fields: [marketId], references: [id])

  brandSellerId Int?         @map("brand_seller")
  brandSeller   BrandSeller? @relation(fields: [brandSellerId], references: [id])

  productAttachments ProductAttachment[]
  productTags        ProductTag[]
  productQuestions   ProductQuestion[]
  cartItems          CartItem[]
  wishlistItems      WishlistItem[]
  orderItems         OrderItem[]
  productRatings     ProductRating[]

  @@map("products")
  @@schema("public")
}

model Tag {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  productTags ProductTag[]

  @@map("tags")
  @@schema("public")
}

model Country {
  id           Int           @id @default(autoincrement())
  name         String
  code         String
  brandSellers BrandSeller[]

  @@map("countries")
  @@schema("public")
}

model ShoppingCart {
  id        Int        @id @default(autoincrement())
  clientId  Int        @map("client_id")
  client    Client     @relation(fields: [clientId], references: [id])
  cartItems CartItem[]

  @@map("shopping_carts")
  @@schema("public")
}

model Wishlist {
  id            Int            @id @default(autoincrement())
  clientId      Int            @map("client_id")
  client        Client         @relation(fields: [clientId], references: [id])
  wishlistItems WishlistItem[]

  @@map("wishlists")
  @@schema("public")
}

model Order {
  id         Int         @id @default(autoincrement())
  totalPrice Decimal     @map("total_price")
  status     String
  clientId   Int         @map("client_id")
  client     Client      @relation(fields: [clientId], references: [id])
  orderItems OrderItem[]

  @@map("orders")
  @@schema("public")
}

model Chat {
  id               Int               @id @default(autoincrement())
  createdAt        DateTime          @default(now()) @map("created_at")
  chatMessage      ChatMessage[]
  chatParticipants ChatParticipant[]

  @@map("chats")
  @@schema("public")
}

model Message {
  id                 Int                 @id @default(autoincrement())
  text               String
  createdAt          DateTime            @default(now()) @map("created_at")
  updatedAt          DateTime            @default(now()) @map("updated_at")
  status             Int
  userId             String              @map("user_id")
  user               User                @relation(fields: [userId], references: [id])
  messageAttachments MessageAttachment[]
  chatMessages       ChatMessage[]

  @@map("messages")
  @@schema("public")
}

// location
model Departamento {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  provincias Provincia[]
  distritos  Distrito[]
  clients    Client[]

  @@map("departamentos")
  @@schema("public")
}

model Provincia {
  id             Int          @id @default(autoincrement())
  name           String       @unique
  departamentoId Int          @map("departamento_id")
  departamento   Departamento @relation(fields: [departamentoId], references: [id])
  distritos      Distrito[]
  clients        Client[]

  @@map("provincias")
  @@schema("public")
}

model Distrito {
  id   Int    @id @default(autoincrement())
  name String

  provinciaId Int       @map("provincia_id")
  provincia   Provincia @relation(fields: [provinciaId], references: [id])

  departamentoId Int          @map("departamento_id")
  departamento   Departamento @relation(fields: [departamentoId], references: [id])
  clients        Client[]

  @@map("distritos")
  @@schema("public")
}

// many to many 

model ChatMessage {
  chatId    Int
  messageId Int

  chat    Chat    @relation(fields: [chatId], references: [id])
  message Message @relation(fields: [messageId], references: [id])

  @@id([chatId, messageId])
  @@map("chat_messages")
  @@schema("public")
}

model BrandSeller {
  id                Int       @id @default(autoincrement())
  name              String
  countryOrigin     String
  referenceLocation String
  countryId         Int
  country           Country   @relation(fields: [countryId], references: [id])
  products          Product[]

  @@map("brand_sellers")
  @@schema("public")
}

model MessageAttachment {
  id        Int     @id @default(autoincrement())
  blobUrl   String
  filename  String
  type      String
  messageId Int
  message   Message @relation(fields: [messageId], references: [id])

  @@map("message_attachments")
  @@schema("public")
}

model ClientNotification {
  clientId       Int
  notificationId Int
  client         Client       @relation(fields: [clientId], references: [id])
  notification   Notification @relation(fields: [notificationId], references: [id])

  @@id([clientId, notificationId])
  @@map("client_notifications")
  @@schema("public")
}

model ChatParticipant {
  chatId   Int
  clientId Int
  chat     Chat   @relation(fields: [chatId], references: [id])
  client   Client @relation(fields: [clientId], references: [id])

  @@id([chatId, clientId])
  @@map("chat_participants")
  @@schema("public")
}

model ProductQuestion {
  id              Int             @id @default(autoincrement())
  text            String
  createdAt       DateTime        @default(now())
  productId       Int
  clientId        Int
  product         Product         @relation(fields: [productId], references: [id])
  client          Client          @relation(fields: [clientId], references: [id])
  questionReplies QuestionReply[]

  @@map("product_questions")
  @@schema("public")
}

model CartItem {
  amount       Int
  addedAt      DateTime     @default(now())
  cartId       Int
  productId    Int
  shoppingCart ShoppingCart @relation(fields: [cartId], references: [id])
  product      Product      @relation(fields: [productId], references: [id])

  @@id([cartId, productId])
  @@map("cart_items")
  @@schema("public")
}

model ProductTag {
  categoryId Int
  productId  Int
  tag        Tag     @relation(fields: [categoryId], references: [id])
  product    Product @relation(fields: [productId], references: [id])

  @@id([categoryId, productId])
  @@map("product_tags")
  @@schema("public")
}

model WishlistItem {
  addedAt    DateTime @default(now())
  wishlistId Int
  productId  Int

  wishlist Wishlist @relation(fields: [wishlistId], references: [id])
  product  Product  @relation(fields: [productId], references: [id])

  @@id([wishlistId, productId])
  @@map("wishlist_items")
  @@schema("public")
}

model OrderItem {
  amount    Int
  orderId   Int
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
  @@map("order_items")
  @@schema("public")
}

model ProductAttachment {
  imageUrl  String
  productId Int
  product   Product @relation(fields: [productId], references: [id])

  @@id([productId])
  @@map("product_attachments")
  @@schema("public")
}

model QuestionReply {
  id              Int             @id @default(autoincrement())
  text            String
  createdAt       DateTime        @default(now())
  questionId      Int
  productQuestion ProductQuestion @relation(fields: [questionId], references: [id])

  @@map("question_replies")
  @@schema("public")
}

model ProductRating {
  id                Int                @id @default(autoincrement())
  score             Int
  text              String
  createdAt         DateTime           @default(now())
  clientId          Int
  productId         Int
  client            Client             @relation(fields: [clientId], references: [id])
  product           Product            @relation(fields: [productId], references: [id])
  ratingAttachments RatingAttachment[]

  @@map("product_ratings")
  @@schema("public")
}

model RatingAttachment {
  blobUrl       String
  filename      String
  type          String
  ratingId      Int
  productRating ProductRating @relation(fields: [ratingId], references: [id])

  @@id([ratingId])
  @@map("rating_attachments")
  @@schema("public")
}
