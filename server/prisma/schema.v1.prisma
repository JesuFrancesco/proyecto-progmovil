generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelos

model User {
  id               Int     @id @default(autoincrement())
  name             String
  lastName         String  @map("last_name")
  role             String  @default("user")
  referenceAddress String? @map("reference_address")
  password         String
  email            String
  phone            String?

  // ubicacion
  distrito   Distrito? @relation(fields: [distritoId], references: [id])
  distritoId Int?      @map("distrito_id")

  provincia   Provincia? @relation(fields: [provinciaId], references: [id])
  provinciaId Int?       @map("provincia_id")

  departamento   Departamento? @relation(fields: [departamentoId], references: [id])
  departamentoId Int?          @map("departamento_id")

  // one to one relationships
  shoppingCart ShoppingCart?
  wishlist     Wishlist?

  // one to many
  orders            Order[]
  productQuestions  ProductQuestion[]
  userNotifications UserNotification[]
  productRatings    ProductRating[]

  // many to many
  messages         Message[]
  chatParticipants ChatParticipant[]

  @@map("usuarios")
}

model Chat {
  id           Int               @id @default(autoincrement())
  createdAt    DateTime          @default(now()) @map("created_at")
  messages     ChatMessage[]
  participants ChatParticipant[]

  @@map("chats")
}

model Notification {
  id          Int                @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime           @default(now()) @map("created_at")
  updatedAt   DateTime           @updatedAt @map("updated_at")
  imageUrl    String             @map("image_url")
  users       UserNotification[]

  @@map("notifications")
}

model Tag {
  id       Int          @id @default(autoincrement())
  name     String
  products ProductTag[]

  @@map("tags")
}

model Country {
  id           Int           @id @default(autoincrement())
  code         String
  name         String
  brandSellers BrandSeller[]

  @@map("countries")
}

model Message {
  id                 Int                 @id @default(autoincrement())
  text               String
  createdAt          DateTime            @default(now()) @map("created_at")
  updatedAt          DateTime            @updatedAt @map("updated_at")
  status             Int
  sender             User                @relation(fields: [senderId], references: [id])
  senderId           Int                 @map("sender_id")
  chatMessages       ChatMessage[]
  messageAttachments MessageAttachment[]

  @@map("messages")
}

model ShoppingCart {
  id     Int        @id @default(autoincrement())
  user   User       @relation(fields: [userId], references: [id])
  userId Int        @unique @map("user_id")
  items  CartItem[]

  @@map("shopping_carts")
}

model Wishlist {
  id     Int            @id @default(autoincrement())
  user   User           @relation(fields: [userId], references: [id])
  userId Int            @unique @map("user_id")
  items  WishlistItem[]

  @@map("wishlists")
}

model Order {
  id         Int         @id @default(autoincrement())
  totalPrice Int         @map("total_price")
  status     String
  user       User        @relation(fields: [userId], references: [id])
  userId     Int         @map("user_id")
  items      OrderItem[]

  @@map("orders")
}

model ChatMessage {
  chatId    Int
  messageId Int
  chat      Chat    @relation(fields: [chatId], references: [id])
  message   Message @relation(fields: [messageId], references: [id])

  @@id([chatId, messageId])
  @@map("chat_messages")
}

model BrandSeller {
  id                Int       @id @default(autoincrement())
  name              String
  countryOrigin     String    @map("country_origin")
  referenceLocation String    @map("reference_location")
  country           Country   @relation(fields: [countryId], references: [id])
  countryId         Int       @map("country_id")
  products          Product[]

  @@map("brand_sellers")
}

model MessageAttachment {
  id        Int     @id @default(autoincrement())
  blobUrl   String  @map("blob_url")
  filename  String
  type      String
  message   Message @relation(fields: [messageId], references: [id])
  messageId Int     @map("message_id")

  @@map("message_attachments")
}

model UserNotification {
  userId         Int
  notificationId Int
  user           User         @relation(fields: [userId], references: [id])
  notification   Notification @relation(fields: [notificationId], references: [id])

  @@id([userId, notificationId])
  @@map("user_notifications")
}

model ChatParticipant {
  chatId Int
  userId Int
  chat   Chat @relation(fields: [chatId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@id([chatId, userId])
  @@map("chat_participants")
}

model Product {
  id               Int               @id @default(autoincrement())
  name             String
  stock            Int
  price            Float
  warranty         Boolean
  dimensions       String?
  discount         Int?
  seller           BrandSeller       @relation(fields: [sellerId], references: [id])
  sellerId         Int               @map("seller_id")
  productQuestions ProductQuestion[]
  tags             ProductTag[]
  cartItems        CartItem[]
  wishlistItems    WishlistItem[]
  orderItems       OrderItem[]
  ratings          ProductRating[]
  ProductImage     ProductImage[]

  @@map("products")
}

model ProductImage {
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")
  image_url String

  @@id([productId])
  @@map("product_images")
}

model ProductQuestion {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  product   Product  @relation(fields: [productId], references: [id])
  productId Int      @map("product_id")
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")

  @@map("product_questions")
}

model ProductTag {
  categoryId Int     @map("category_id")
  productId  Int     @map("product_id")
  tag        Tag     @relation(fields: [categoryId], references: [id])
  product    Product @relation(fields: [productId], references: [id])

  @@id([categoryId, productId])
  @@map("product_tags")
}

model CartItem {
  amount    Int
  addedAt   DateTime     @default(now()) @map("added_at")
  cart      ShoppingCart @relation(fields: [cartId], references: [id])
  cartId    Int          @map("cart_id")
  product   Product      @relation(fields: [productId], references: [id])
  productId Int          @map("product_id")

  @@id([cartId, productId])
  @@map("cart_items")
}

model WishlistItem {
  addedAt    DateTime @default(now()) @map("added_at")
  wishlist   Wishlist @relation(fields: [wishlistId], references: [id])
  wishlistId Int      @map("wishlist_id")
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int      @map("product_id")

  @@id([wishlistId, productId])
  @@map("wishlist_items")
}

model OrderItem {
  amount    Int
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int     @map("order_id")
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")

  @@id([orderId, productId])
  @@map("order_items")
}

model ProductRating {
  id                Int                @id @default(autoincrement())
  score             Int
  text              String
  user              User               @relation(fields: [userId], references: [id])
  userId            Int                @map("user_id")
  product           Product            @relation(fields: [productId], references: [id])
  productId         Int                @map("product_id")
  ratingAttachments RatingAttachment[]

  @@map("product_ratings")
}

model RatingAttachment {
  id       Int           @id @default(autoincrement())
  blobUrl  String        @map("blob_url")
  filename String
  type     String
  rating   ProductRating @relation(fields: [ratingId], references: [id])
  ratingId Int           @map("rating_id")

  @@map("rating_attachments")
}

model Departamento {
  id         Int         @id
  name       String
  provincias Provincia[]
  distritos  Distrito[]
  User       User[]

  @@map("departamentos")
}

model Provincia {
  id              Int          @id
  name            String
  departamento    Departamento @relation(fields: [departamento_id], references: [id])
  departamento_id Int
  distritos       Distrito[]
  User            User[]

  @@map("provincias")
}

model Distrito {
  id              Int          @id
  name            String
  provincia       Provincia    @relation(fields: [provincia_id], references: [id])
  provincia_id    Int
  departamento    Departamento @relation(fields: [departamento_id], references: [id])
  departamento_id Int
  User            User[]

  @@map("distritos")
}
